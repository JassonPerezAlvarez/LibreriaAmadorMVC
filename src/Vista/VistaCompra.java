package Vista;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import Controlador.CompraController;
import Modelo.Compra;
import Modelo.DetalleCompra;
import Util.ConexionDB; // NOTA: faltaba importar esta clase
import java.sql.*;      // NOTA: importé todo sql porque usas Connection, PreparedStatement, ResultSet, SQLException
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;  // NOTA: faltaba importar ArrayList
import java.util.Date;
import java.util.List;

/**
 *
 * @author suare
 */
public class VistaCompra extends javax.swing.JPanel {

    private final CompraController controlador = new CompraController();
    private int idCompraSeleccionada = -1;

    public VistaCompra() throws SQLException {
        initComponents();
        cargarTabla();

        // Listener para selección de fila en la tabla
        jTableCompra.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int fila = jTableCompra.getSelectedRow();
                if (fila != -1) {
                    // Asumiendo columnas: 0=IDCompra, 1=IDProveedor, 2=FechaCompra
                    idCompraSeleccionada = (int) jTableCompra.getValueAt(fila, 0);
                    jTextFieldIDCompra.setText(String.valueOf(idCompraSeleccionada));

                    int idProveedor = (int) jTableCompra.getValueAt(fila, 1);
                    jTextFieldIDProveedor.setText(String.valueOf(idProveedor));

                    Object fechaObj = jTableCompra.getValueAt(fila, 2);
                    if (fechaObj instanceof Date) {
                        jDateChooser1.setDate((Date) fechaObj);
                    } else {
                        jDateChooser1.setDate(null); // o manejar formato String si necesario
                    }
                }
            }
        });
    }

    private void limpiarCampos() {
        jTextFieldIDCompra.setText("");
        jTextFieldIDProveedor.setText("");
        jDateChooser1.setDate(null);
        idCompraSeleccionada = -1;
        jTableCompra.clearSelection();
    }

    private void cargarTabla() {
        DefaultTableModel model = (DefaultTableModel) jTableCompra.getModel();
        model.setRowCount(0);

        List<Compra> compras = controlador.obtenerTodasCompras();
        if (compras != null) {
            for (Compra c : compras) {
                model.addRow(new Object[]{
                    c.getIdCompra(),
                    c.getIdProveedor(),
                    c.getFechaCompra()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldIDCompra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldIDProveedor = new javax.swing.JTextField();
        jButtonGuardar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCompra = new javax.swing.JTable();
        jTextFieldBuscar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(40, 86, 115));

        jPanel1.setBackground(new java.awt.Color(40, 86, 115));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Compras", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jTextFieldIDCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDCompraActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Fecha");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ID Proveedor");

        jTextFieldIDProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDProveedorActionPerformed(evt);
            }
        });

        jButtonGuardar.setBackground(new java.awt.Color(58, 114, 142));
        jButtonGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setBackground(new java.awt.Color(58, 114, 142));
        jButtonLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonEliminar.setBackground(new java.awt.Color(58, 114, 142));
        jButtonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonActualizar.setBackground(new java.awt.Color(58, 114, 142));
        jButtonActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("ID Compra");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonEliminar)
                        .addGap(42, 42, 42)
                        .addComponent(jButtonLimpiar)
                        .addGap(38, 38, 38)
                        .addComponent(jButtonActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jButtonGuardar)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(81, 81, 81)
                                .addComponent(jTextFieldIDCompra))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(64, 64, 64)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldIDProveedor))))
                        .addGap(119, 119, 119))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldIDCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldIDProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonLimpiar)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonGuardar))
                .addGap(160, 160, 160))
        );

        jPanel2.setBackground(new java.awt.Color(40, 86, 115));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro Compras", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jTableCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Compra", "Fecha", "ID Proveedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableCompra);

        jTextFieldBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Busqueda por ID");

        jButtonBuscar.setBackground(new java.awt.Color(58, 114, 142));
        jButtonBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jButtonBuscar)
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldIDCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDCompraActionPerformed

    }//GEN-LAST:event_jTextFieldIDCompraActionPerformed

    private void jTextFieldIDProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDProveedorActionPerformed

    private void jTextFieldBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarActionPerformed
        // TODO add your handling code here:
        String texto = jTextFieldBuscar.getText().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) jTableCompra.getModel();
        model.setRowCount(0);

        List<Compra> compras = controlador.obtenerTodasCompras();
        for (Compra c : compras) {
            // Suponiendo que buscas por idProveedor convertido a texto o por fecha como texto
            String idProveedorStr = String.valueOf(c.getIdProveedor());
            String fechaStr = c.getFechaCompra().toString(); // puedes formatear si quieres
            if (idProveedorStr.toLowerCase().contains(texto) || fechaStr.toLowerCase().contains(texto)) {
                model.addRow(new Object[]{
                    c.getIdCompra(),
                    c.getFechaCompra(),
                    c.getIdProveedor()
                });
            }
        }
    }//GEN-LAST:event_jTextFieldBuscarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        try {
            int idProveedor = Integer.parseInt(jTextFieldIDProveedor.getText());
            Date fechaCompra = jDateChooser1.getDate();

            if (fechaCompra == null) {
                JOptionPane.showMessageDialog(this, "Por favor selecciona una fecha de compra.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            List<DetalleCompra> detalles = null;

            controlador.crearCompra(idProveedor, fechaCompra, detalles);

            limpiarCampos();
            cargarTabla();

            JOptionPane.showMessageDialog(this, "Compra guardada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID del proveedor no válido.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar la compra: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
       String texto = jTextFieldBuscar.getText().trim().toLowerCase();

    if (texto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un ID de proveedor para buscar.", "Campo vacío", JOptionPane.WARNING_MESSAGE);
        return;
    }

    DefaultTableModel model = (DefaultTableModel) jTableCompra.getModel();
    model.setRowCount(0);

    List<Compra> compras = controlador.obtenerTodasCompras();
    boolean resultadoEncontrado = false;

    for (Compra c : compras) {
        String idProveedorStr = String.valueOf(c.getIdProveedor());
        if (idProveedorStr.contains(texto)) {
            model.addRow(new Object[]{
                c.getIdCompra(),
                c.getFechaCompra(),
                c.getIdProveedor()
            });
            resultadoEncontrado = true;
        }
    }

    // Opcional: mostrar mensaje si no hubo coincidencias
    if (!resultadoEncontrado) {
        JOptionPane.showMessageDialog(this, "No se encontraron compras con ese ID de proveedor.", "Sin resultados", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        if (idCompraSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una compra para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "¿Está seguro de eliminar la compra seleccionada?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            controlador.eliminarCompra(idCompraSeleccionada);
            limpiarCampos();
            cargarTabla();
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        if (idCompraSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona una compra para actualizar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int idProveedor = Integer.parseInt(jTextFieldIDProveedor.getText());
            Date fechaCompra = jDateChooser1.getDate();

            if (fechaCompra == null) {
                JOptionPane.showMessageDialog(this, "Selecciona una fecha válida.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            controlador.actualizarCompra(idCompraSeleccionada, idProveedor, fechaCompra);
            limpiarCampos();
            cargarTabla();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del proveedor debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
      //  jTextFieldIDCompra.setText("");
   //     jTextFieldIDProveedor.setText("");
     //   jDateChooser1.setDate(null);
       // jTableCompra.clearSelection();
       // idCompraSeleccionada = -1;
       boolean camposVacios = jTextFieldIDCompra.getText().trim().isEmpty() &&
                           jTextFieldIDProveedor.getText().trim().isEmpty() &&
                           jDateChooser1.getDate() == null;

    if (camposVacios) {
        JOptionPane.showMessageDialog(this, "Todos los campos ya están vacíos.", "Información", JOptionPane.INFORMATION_MESSAGE);
    } else {
        jTextFieldIDCompra.setText("");
        jTextFieldIDProveedor.setText("");
        jDateChooser1.setDate(null);
        jTableCompra.clearSelection();
        idCompraSeleccionada = -1;
    }
    }//GEN-LAST:event_jButtonLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLimpiar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCompra;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldIDCompra;
    private javax.swing.JTextField jTextFieldIDProveedor;
    // End of variables declaration//GEN-END:variables
}
